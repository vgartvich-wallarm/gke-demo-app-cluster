admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          access_log:
            - name: envoy.file_access_log
              typed_config:
                "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                path: "access.log"
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              ########################################
              # wallarm filter config per virtual host
              ########################################
              typed_per_filter_config:
                wallarm:
                  "@type": type.googleapis.com/wallarm.WallarmConf
                  instance: 2 # mark everything within this VHost as instance 2
                  # acl: acl0 # use acl0 within this VHost
              domains:
              - "*"
              routes:
              ########################################
              # wallarm status route and configuration
              ########################################
              - match:
                  prefix: "/wallarm-status"
                route:
                  cluster: default
                #################################
                # wallarm filter config per route
                #################################
                typed_per_filter_config:
                  wallarm:
                    "@type": type.googleapis.com/wallarm.WallarmConf
                    wallarm_status: "on"
                    wallarm_status_format: "json"
              ########################################
              # wallarm ACL api route and configuration
              ########################################
              #- match:
              #    prefix: "/acl"
              #  route:
              #    cluster: default
              #  typed_per_filter_config:
              #    wallarm:
              #      "@type": type.googleapis.com/wallarm.WallarmConf
              #      acl_api: true
              ##########################################
              # default route, if nothing matched above
              ##########################################
              - match:
                  prefix: "/"
                route:
                  cluster: default
                  max_grpc_timeout: 0s
                typed_per_filter_config:
                  wallarm:
                    "@type": type.googleapis.com/wallarm.WallarmConf
                    ts: ts0
                    mode: "block"
                    mode_allow_override: "on"
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: custom-header-1,grpc-status,grpc-message
          http_filters:
          ############################
          # in order to detect attacks in the POST body we have to buffer request
          ############################
          - name: envoy.buffer
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.buffer.v2.Buffer
              max_request_bytes: 5242880
          ############################
          # wallarm filter main config
          ############################
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: wallarm
            typed_config:
              "@type": type.googleapis.com/wallarm.Wallarm
              tsets:
              - name: ts0
                pdb: /etc/wallarm/proton.db
                lom: /etc/wallarm/lom
                key: /etc/wallarm/license.key
                ts_request_memory_limit: 0
              tarantool:
                server:
                  - uri: localhost:3313
                    max_packets: 512
                    max_packets_mem: 0
                    reconnect_interval: 1
              conf:
                mode: "block"
                request_memory_limit: 0
                process_time_limit: 1000
                process_time_limit_block: "attack"
                parse_response: true
                unpack_response: true
                parse_html_response: true
              cache_path:
                cache
              file_check_interval:
                60000 # milliseconds
#              acls:
#              - name: acl0
#                path: acl0
#                mapsize: 1000000
              loader_log_mask: "all"
              worker_log_mask: "all"
          - name: envoy.router
            typed_config: {}
  clusters:
  - name: default
    connect_timeout: 0.25s
    type: strict_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    hosts: [{ socket_address: { address: 127.0.0.1, port_value: 9090 }}]
